From 3f8a4960fe56f6e3808a26adfbba138e37eff3b7 Mon Sep 17 00:00:00 2001
From: syhost <syhost@163.com>
Date: Sat, 15 Mar 2014 01:24:52 +0800
Subject: [PATCH 3/5] add preinstall for pm

Change-Id: I0d13b95bd033ff137dc3b7ff014b7b6d3116f9a9
---
 cmds/pm/src/com/android/commands/pm/Pm.java | 50 +++++++++++++++++++++++++++++
 1 file changed, 50 insertions(+)

diff --git a/cmds/pm/src/com/android/commands/pm/Pm.java b/cmds/pm/src/com/android/commands/pm/Pm.java
index d1ded10..6f48956 100644
--- a/cmds/pm/src/com/android/commands/pm/Pm.java
+++ b/cmds/pm/src/com/android/commands/pm/Pm.java
@@ -116,6 +116,11 @@ public final class Pm {
             runInstall();
             return;
         }
+        
+        if ("preinstall".equals(op)) {
+			preInstall();
+			return;
+        }
 
         if ("uninstall".equals(op)) {
             runUninstall();
@@ -785,6 +790,51 @@ public final class Pm {
             System.err.println(PM_NOT_RUNNING_ERR);
         }
     }
+    
+	private void preInstall() {
+		String path = nextArg();
+		int i;
+
+		System.err.println("\t preInstall path: " + path);
+		if (path == null) {
+			System.err.println("Error: no package specified");
+			showUsage();
+			return;
+		}
+
+		File[] files = new File(path).listFiles();
+
+		for(File apkFilePath : files) {
+			System.err.println("\tpkg: " + apkFilePath);
+			PackageInstallObserver obs = new PackageInstallObserver();                      
+			try {
+				mPm.installPackage(Uri.fromFile(apkFilePath), obs, 0,null);
+				System.err.println("\t pkg----1------: ");
+				synchronized (obs) {
+					while (!obs.finished) {
+						try {
+							System.err.println("\t pkg----2------: ");
+							obs.wait();
+							System.err.println("\t pkg----3------: ");
+						} catch (InterruptedException e) {
+							System.err.println("\t pkg----4------: ");
+						}
+					}
+					if (obs.result == PackageManager.INSTALL_SUCCEEDED) {
+						System.out.println("Success");
+					} else {
+						System.err.println("Failure ["
+							+ installFailureToString(obs.result)
+							+ "]");
+					}
+				}
+			} catch (RemoteException e) {
+				System.err.println(e.toString());
+				System.err.println(PM_NOT_RUNNING_ERR);
+			}
+		}
+		System.err.println("\t preInstall path: " + path + " ok");      
+	}
 
     private void runInstall() {
         int installFlags = PackageManager.INSTALL_ALL_USERS;
-- 
1.8.3.2

